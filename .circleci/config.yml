version: 2
jobs:
  test:
    working_directory: ~/circle
    docker:
      - image: ministryofjustice/ruby:2.5.1
        environment:
          RAILS_ENV: test
    steps:
      - checkout
      - run:
          name: bundle install
          command: 'bundle install --deployment --jobs=2 --retry 3 --without development'
      - run:
          name: test
          command: 'bundle exec rspec'
  build:
    working_directory: ~/circle/git/fb-user-filestore
    docker:
      - image: asmega/fb-builder:latest
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "2e:08:38:15:1b:8d:50:fb:35:8e:98:57:76:f7:ef:49"
      - run:
          name: checkout fb-user-filestore-deploy
          command: "GIT_SSH_COMMAND='ssh -v -i ~/.ssh/id_rsa_2e0838151b8d50fb358e985776f7ef49 -o \"IdentitiesOnly=yes\"' git clone git@github.com:ministryofjustice/fb-user-filestore-deploy.git ~/circle/git/fb-user-filestore-deploy"
      - run:
          name: persist git crypt key to disk
          command: "echo $ENCODED_GIT_CRYPT_KEY | base64 -d > /root/circle/git_crypt.key"
      - run:
          name: unlock git crypt
          command: "cd ~/circle/git/fb-user-filestore-deploy && git-crypt unlock /root/circle/git_crypt.key"
      - run:
          name: npm install
          command: 'npm install'
      - setup_remote_docker
      - run:
          name: KUBE_CERTIFICATE_AUTHORITY to disk
          command: 'echo -n "$KUBE_CERTIFICATE_AUTHORITY" | base64 -d > /root/circle/.kube_certificate_authority'
      - run:
          name: kubectl configure cluster
          command: 'kubectl config set-cluster "$KUBE_CLUSTER" --certificate-authority="/root/circle/.kube_certificate_authority" --server="$KUBE_SERVER"'
      - run:
          name: kubectl configure credentials
          command: 'kubectl config set-credentials "circleci" --token="$KUBE_TOKEN"'
      - run:
          name: kubectl configure context
          command: 'kubectl config set-context "circleci" --cluster="$KUBE_CLUSTER" --user="circleci" --namespace="formbuilder-repos"'
      - run:
          name: kubectl use circleci context
          command: 'kubectl config use-context circleci'
      - run:
          name: build and push docker images
          command: './scripts/build_platform_images.sh -p test'
      - run:
          name: kubectl configure credentials
          command: 'kubectl config set-credentials "circleci_test_dev" --token="$KUBE_TOKEN_TEST_DEV"'
      - run:
          name: kubectl configure context
          command: 'kubectl config set-context "circleci_test_dev" --cluster="$KUBE_CLUSTER" --user="circleci_test_dev" --namespace="formbuilder-platform-test-dev"'
      - run:
          name: kubectl use circleci context
          command: 'kubectl config use-context circleci_test_dev'
      - run:
          name: apply kubernetes changes
          command: './scripts/deploy_platform.sh -p test -d dev'
      - run:
          name: delete pods
          command: './scripts/restart_platform_pods.sh -p test -d dev -c circleci_test_dev'
      - run:
          name: kubectl configure credentials
          command: 'kubectl config set-credentials "circleci_test_staging" --token="$KUBE_TOKEN_TEST_STAGING"'
      - run:
          name: kubectl configure context
          command: 'kubectl config set-context "circleci_test_staging" --cluster="$KUBE_CLUSTER" --user="circleci_test_staging" --namespace="formbuilder-platform-test-staging"'
      - run:
          name: kubectl use circleci context
          command: 'kubectl config use-context circleci_test_staging'
      - run:
          name: apply kubernetes changes
          command: './scripts/deploy_platform.sh -p test -d staging'
      - run:
          name: delete pods
          command: './scripts/restart_platform_pods.sh -p test -d staging -c circleci_test_staging'

workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
